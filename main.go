package main

import (
	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/app"
	"fyne.io/fyne/v2/canvas"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/widget"
)

var (
	reconCompleted   bool
	analyzeCompleted bool
)

func reconnaissance() {

	reconCompleted = true
}

func analyseVulnerabilites() {

	analyzeCompleted = true
}

func main() {
	a := app.New()
	w := a.NewWindow("Pentest Recap")
	w.Resize(fyne.NewSize(1000, 800))

	progressBar := widget.NewProgressBar()

	acceuil := container.NewVBox(
		widget.NewLabel("Bienvenue dans l'outil de récapitulation des étapes de pentest !"),
		canvas.NewImageFromURI(""),
	)
	reconContent := container.NewVBox(
		widget.NewLabel("Page de la Reconnaissance"),
		container.NewVBox(
			progressBar,
		),
		widget.NewButton("Commencer Reconnaissance", func() {
			reconnaissance()
			updateProgressBar(progressBar)
		}),
	)
	analyzeContent := container.NewVBox(
		widget.NewLabel("Page de l'Analyse des vulnérabilités"),
		container.NewVBox(
			progressBar,
		),
		widget.NewButton("Commencer Analyse des vulnérabilités", func() {
			analyseVulnerabilites()
			updateProgressBar(progressBar)
		}),
	)

	tabs := container.NewAppTabs(
		container.NewTabItem("Accueil", container.NewVScroll(acceuil)),
		container.NewTabItem("Reconnaissance", container.NewVScroll(reconContent)),
		container.NewTabItem("Analyse des vulnérabilités", container.NewVScroll(analyzeContent)),
	)

	mainLayout := container.NewHBox(tabs)

	w.SetContent(mainLayout)
	w.ShowAndRun()
}

func updateProgressBar(progressBar *widget.ProgressBar) {
	completedSteps := 0
	totalSteps := 0

	if reconCompleted {
		completedSteps++
	}
	if analyzeCompleted {
		completedSteps++
	}

	totalSteps = 2

	progress := float64(completedSteps) / float64(totalSteps)
	progressBar.SetValue(progress)
}
